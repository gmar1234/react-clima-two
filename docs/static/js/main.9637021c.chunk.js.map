{"version":3,"sources":["components/Clima.js","components/Error.js","components/Formulario.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Clima","resultado","name","main","kelvin","className","parseFloat","temp","toFixed","temp_max","temp_min","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Header","titulo","href","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9637021c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Clima = ({ resultado }) => {\n  const { name, main } = resultado;\n  if (!name) return null;\n\n  // grados kelvin\n\n  const kelvin = 273.15;\n\n  return (\n    <div className=\"card-panel white col s12\">\n      <div className=\"black-text\">\n        <h2>El Clima de {name}</h2>\n        <p className=\"temperatura\">\n          {parseFloat(main.temp - kelvin, 10).toFixed(2)} <span> &#x2103;</span>\n        </p>\n\n        <p>\n          Temperatura Máxima {parseFloat(main.temp_max - kelvin, 10).toFixed(2)}{\" \"}\n          <span> &#x2103;</span>\n        </p>\n\n        <p>\n          Temperatura Mínima {parseFloat(main.temp_min - kelvin, 10).toFixed(2)}{\" \"}\n          <span> &#x2103;</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nClima.propTypes = {\n  resultado: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Error = ({ mensaje }) => {\n  return <p className=\"red darken-4 error\">{mensaje}</p>;\n};\n\nError.propTypes = {\n  mensaje: PropTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Error } from \"./Error\";\n\nexport const Formulario = ({ busqueda, guardarBusqueda, guardarConsultar }) => {\n  const [error, guardarError] = useState(false);\n\n  const { ciudad, pais } = busqueda;\n\n  const handleChange = (e) => {\n    guardarBusqueda({\n      ...busqueda,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //validar\n\n    if (ciudad.trim() === \"\" || pais === \"\") {\n      guardarError(true);\n      return;\n    }\n\n    guardarError(false);\n\n    guardarConsultar(true);\n    //pasar al componentep princiapl\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      {error ? <Error mensaje=\"Todo los campos son obligatorios\" /> : null}\n      <div className=\"input-field col s12\">\n        <input\n          type=\"text\"\n          name=\"ciudad\"\n          id=\"ciudad\"\n          value={ciudad}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"ciudad\">Ciudad </label>\n      </div>\n\n      <div className=\"input-field col s12\">\n        <select name=\"pais\" id=\"pais\" value={pais} onChange={handleChange}>\n          <option value=\"\">-- Seleccione un pais --</option>\n          <option value=\"US\">Estados Unidos</option>\n          <option value=\"MX\">México</option>\n          <option value=\"AR\">Argentina</option>\n          <option value=\"CO\">Colombia</option>\n          <option value=\"CR\">Costa Rica</option>\n          <option value=\"ES\">España</option>\n          <option value=\"PE\">Perú</option>\n        </select>\n        <label htmlFor=\"pais\">Pais </label>\n      </div>\n\n      <div className=\"input-field col s12\">\n        <input\n          type=\"submit\"\n          value=\"Buscar Clima\"\n          className=\"waves-effect waves-light btn-large btn-block yellow accent-4 \"\n        />\n      </div>\n    </form>\n  );\n};\n\nFormulario.propTypes = {\n  busqueda: PropTypes.object.isRequired,\n  guardarBusqueda: PropTypes.func.isRequired,\n  guardarConsultar: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Header = ({ titulo }) => {\n  return (\n    <nav className=\"nav-wrapper ligth-blue darken-2\">\n      <a href=\"#!\" className=\"brand-logo\">\n        {titulo}\n      </a>\n    </nav>\n  );\n};\n\nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired,\n};\n","import { useEffect, useState } from \"react\";\nimport { Clima } from \"./components/Clima\";\nimport { Error } from \"./components/Error\";\nimport { Formulario } from \"./components/Formulario\";\nimport { Header } from \"./components/Header\";\n\nfunction App() {\n  const [busqueda, guardarBusqueda] = useState({\n    ciudad: \"\",\n    pais: \"\",\n  });\n\n  const [consultar, guardarConsultar] = useState(false);\n  const [resultado, guardarResultado] = useState({})\n  const [error, guardarError] = useState(false)\n  \n  \n  const { ciudad, pais } = busqueda;\n\n  useEffect(() => {\n    \n\n    const consultarAPI = async ()=>{\n      \n      if(consultar){\n        const appId = '38312d7bc2ed3b0a085dfca415b17795';\n        const url = ` https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n  \n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n        guardarResultado(resultado);\n        guardarConsultar(false);\n\n        if(resultado.cod===\"404\"){\n          guardarError(true)\n        }\n        else{\n          guardarError(false)\n        }\n        \n      }\n     \n    }\n    consultarAPI();\n    //eslint-disable-next-line\n  }, [consultar]);\n\n\n  let componente;\n\n  if(error){\n    componente = <Error mensaje=\"No hay resultados\" /> \n  }\n  else{\n    componente =  <Clima  resultado={resultado}/>\n  }\n\n  return (\n    <>\n      <Header titulo=\"Clima React App\" />\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario\n                busqueda={busqueda}\n                guardarBusqueda={guardarBusqueda}\n                guardarConsultar={guardarConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">\n              {componente}\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}